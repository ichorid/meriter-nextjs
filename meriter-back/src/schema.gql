# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AggregorCustomer {
  rawDocuments: JSON!
  _id: String!
  userId: String!
  name: String!
  legalName: String!
  logoUrl: String!
  contactName: String!
  contactPhone: String!
  contactEmail: String!
  inn: String!
  ogrn: String!
  address: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  validationStatus: CustomerValidationStatusEnum!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum CustomerValidationStatusEnum {
  NOT_VALIDATED
  VALIDATED
}

type MpModerationStatus {
  ym: MpModerationStatusEnum
  ozon: MpModerationStatusEnum
  amazon: MpModerationStatusEnum
  wildberries: MpModerationStatusEnum
  goods: MpModerationStatusEnum
  aliexpress: MpModerationStatusEnum
}

enum MpModerationStatusEnum {
  DONT_USE_THIS_MP
  NOT_UPLOADED
  REJECTED_BY_AGGREGOR
  WAITING_MP_MODERATOR
  ACTIVE
}

type IsActualOnMp {
  ym: Boolean
  ozon: Boolean
  amazon: Boolean
  wildberries: Boolean
  goods: Boolean
  aliexpress: Boolean
}

type AggregorProduct {
  isActualOnMp: IsActualOnMp!
  rawValues: JSON!
  _id: String!
  sku: String!
  customerId: String!
  updateId: String!
  aggregorModerationStatus: AggregorModerationStatusEnum!
  mpModerationStatus: MpModerationStatus!
  updatedAt: DateTime!
  isActualVersion: Boolean!
  title: String!
  subtitle: String!
  categoryName: String!
  isNewProduct: Boolean!
  imageUrl: String!
}

enum AggregorModerationStatusEnum {
  NOT_CHECKED
  APPROVED
  REJECTED
}

type AggregorProductUpdate {
  customer: AggregorCustomer!
  _id: String!
  customerId: String!
  createdAt: DateTime!
  type: UpdateTypeEnum!
  status: UpdateStatusEnum!
  ymModerationStatus: MpModerationStatusEnum!
  ozonModerationStatus: MpModerationStatusEnum!
  amazonModerationStatus: MpModerationStatusEnum!
}

enum UpdateTypeEnum {
  full
  pricesOnly
}

enum UpdateStatusEnum {
  S000_DRAFT
  S010_APPROVED_BY_AGGREGOR
  S010X_REJECTED_BY_AGGREGOR
  S020_PENDING_MARKETPLACES
  S030_DEBATES
  S035_PARTIALLY_ACCEPTED
  S040_FULLY_ACCEPTED
  S040X_FULLY_REJECTED
}

type AggregorAttribute {
  dictionary: JSON
  id: String!
  name: String!
  description: String!
  type: String!
  is_collection: Boolean!
  is_required: Boolean!
  group_id: Float!
  group_name: String!
  dictionary_id: Float
  basic: Boolean
  field_name: String
}

type GetByInnResponse {
  rawInfo: JSON
  name: String
  inn: String
  ogrn: String
  address: String
  kpp: String
}

type AggregorUser {
  _id: String
  email: String
  passwordHash: String
  isAdmin: Boolean
}

type Query {
  getMetaCategories: JSON!
  getProductUpdate(updateId: String!): AggregorProductUpdate
  getUpdateFields(metaCategory: String!): [AggregorAttribute!]!
  getProductUpdatesListByCustomerId(customerId: String!): [AggregorProductUpdate!]!
  getProductUpdatesList: [AggregorProductUpdate!]!
  getProduct(productId: String): AggregorProduct
  getActualProductsByCustomerId(customerId: String!): [AggregorProduct!]
  getProductsByUpdateId(updateId: String!): [AggregorProduct!]
  getCustomer(id: String!): JSON!
  getCustomersList: JSON!
  getCompanyInfoByInn(searchInn: String!): GetByInnResponse!
  getMe: AggregorUser!
}

type Mutation {
  pushProductUpdates(products: [JSON!]!, customerId: String!): String!
  editProductUpdates(updateId: String!, products: [JSON!]!, customerId: String!): String!
  setReadyForMarketplaces(updateId: String!): String!
  sendToMarketplace(marketplaceEnum: MarketplaceEnum!, updateId: String!): String!
  setAggregorModerationStatus(aggregorModerationStatus: AggregorModerationStatusEnum!, productId: String!): String!
  upsertProduct(productInput: AggregorProductInput!): String!
  registerCustomer(customerRegisterInput: CustomerRegisterInput!): String!
  setCustomerValidationStatus(validationStatus: CustomerValidationStatusEnum!, customerId: String!): String!
}

enum MarketplaceEnum {
  ym
  ozon
  amazon
  aliexpress
  wildberries
  goods
}

input AggregorProductInput {
  rawValues: JSON!
  _id: String
  customerId: String!
  updateId: String!
}

input CustomerRegisterInput {
  rawDocuments: JSON!
  _id: String
  name: String!
  logoUrl: String!
  contactName: String!
  contactPhone: String!
  contactEmail: String!
  inn: String!
  address: String!
}
