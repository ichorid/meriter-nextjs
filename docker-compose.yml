version: '3.8'

services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: meriter-web
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PORT=8001
      - NODE_ENV=production
    ports:
      - "8001:8001"
    networks:
      - meriter-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: meriter-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PORT=8002
      - NODE_ENV=production
    ports:
      - "8002:8002"
    networks:
      - meriter-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  caddy:
    image: caddy:2-alpine
    container_name: meriter-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - meriter-network
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  meriter-network:
    driver: bridge

volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local

